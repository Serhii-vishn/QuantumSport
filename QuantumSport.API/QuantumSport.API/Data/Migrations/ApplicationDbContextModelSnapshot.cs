// <auto-generated />
using Microsoft.EntityFrameworkCore.Infrastructure;

#nullable disable

namespace QuantumSport.API.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuantumSport.API.Data.Entities.CoachEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Achievement")
                        .IsRequired()
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.HasKey("Id");

                    b.ToTable("Coach", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.CoachSportSectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("SportSectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SportSectionId");

                    b.HasIndex("CoachId", "SportSectionId")
                        .IsUnique();

                    b.ToTable("CoachSportSection", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.IndividualMealPlanOrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NutritionistId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NutritionistId");

                    b.HasIndex("UserId", "NutritionistId")
                        .IsUnique();

                    b.ToTable("IndividualMealPlanOrder", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.IndividualTrainingProgramOrderEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CoachId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoachId");

                    b.HasIndex("UserId", "CoachId")
                        .IsUnique();

                    b.ToTable("IndividualTrainingProgramOrder", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.NutritionistEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("Spezialization")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Nutritionist", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.SportSectionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(555)
                        .HasColumnType("nvarchar(555)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("PictureFileName")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.HasKey("Id");

                    b.ToTable("SportSection", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.TrainingEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActualAmount")
                        .HasColumnType("int");

                    b.Property<int>("CoachSportSectionId")
                        .HasColumnType("int");

                    b.Property<int>("MaxAmount")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CoachSportSectionId", "StartDate")
                        .IsUnique();

                    b.ToTable("Training", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nchar(13)")
                        .IsFixedLength();

                    b.HasKey("Id");

                    b.HasIndex("Phone")
                        .IsUnique();

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.UserTrainingRecordEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("TrainingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TrainingId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TrainingId");

                    b.HasIndex("UserId", "TrainingDate")
                        .IsUnique();

                    b.ToTable("UserTrainingRecord", (string)null);
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.CoachSportSectionEntity", b =>
                {
                    b.HasOne("QuantumSport.API.Data.Entities.CoachEntity", "Coach")
                        .WithMany("SportSections")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuantumSport.API.Data.Entities.SportSectionEntity", "SportSection")
                        .WithMany("Coaches")
                        .HasForeignKey("SportSectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("SportSection");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.IndividualMealPlanOrderEntity", b =>
                {
                    b.HasOne("QuantumSport.API.Data.Entities.NutritionistEntity", "Nutritionist")
                        .WithMany("IndividualMealPlanOrders")
                        .HasForeignKey("NutritionistId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuantumSport.API.Data.Entities.UserEntity", "User")
                        .WithMany("IndividualMealPlanOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Nutritionist");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.IndividualTrainingProgramOrderEntity", b =>
                {
                    b.HasOne("QuantumSport.API.Data.Entities.CoachEntity", "Coach")
                        .WithMany("IndividualTrainingProgramOrders")
                        .HasForeignKey("CoachId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuantumSport.API.Data.Entities.UserEntity", "User")
                        .WithMany("IndividualTrainingProgramOrders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Coach");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.TrainingEntity", b =>
                {
                    b.HasOne("QuantumSport.API.Data.Entities.CoachSportSectionEntity", "CoachSportSection")
                        .WithMany("Trainings")
                        .HasForeignKey("CoachSportSectionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CoachSportSection");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.UserTrainingRecordEntity", b =>
                {
                    b.HasOne("QuantumSport.API.Data.Entities.TrainingEntity", "Training")
                        .WithMany("Users")
                        .HasForeignKey("TrainingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("QuantumSport.API.Data.Entities.UserEntity", "User")
                        .WithMany("Trainings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Training");

                    b.Navigation("User");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.CoachEntity", b =>
                {
                    b.Navigation("IndividualTrainingProgramOrders");

                    b.Navigation("SportSections");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.CoachSportSectionEntity", b =>
                {
                    b.Navigation("Trainings");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.NutritionistEntity", b =>
                {
                    b.Navigation("IndividualMealPlanOrders");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.SportSectionEntity", b =>
                {
                    b.Navigation("Coaches");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.TrainingEntity", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("QuantumSport.API.Data.Entities.UserEntity", b =>
                {
                    b.Navigation("IndividualMealPlanOrders");

                    b.Navigation("IndividualTrainingProgramOrders");

                    b.Navigation("Trainings");
                });
#pragma warning restore 612, 618
        }
    }
}
